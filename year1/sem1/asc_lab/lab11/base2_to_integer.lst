     1                                  %ifndef _BASE2_TO_INTEGER_
     2                                  %define _BASE2_TO_INTEGER_
     3                                  
     4                                  base2_to_integer:
     5 00000000 6651                        push ecx
     6 00000002 6655                        push ebp
     7                                      
     8 00000004 6689E5                      mov ebp, esp
     9                                      
    10 00000007 6656                        push esi
    11 00000009 6657                        push edi
    12                                      
    13 0000000B 66678B4D0C                  mov ecx, dword [ebp + 4 * 3]
    14 00000010 67E32B                      jecxz .invalid
    15                                      
    16 00000013 66BF00000000                mov edi, 0
    17 00000019 66BA01000000                mov edx, 1
    18                                      
    19                                      
    20 0000001F 66678B7510                  mov esi, dword [ebp + 4 * 4]
    21 00000024 FC                          cld
    22                                      
    23                                      .iterate:
    24 00000025 AC                              lodsb
    25 00000026 2C30                            sub al, '0'
    26                                          
    27 00000028 3C00                            cmp al, 0
    28 0000002A 7212                            jb .invalid
    29 0000002C 3C01                            cmp al, 1
    30 0000002E 770E                            ja .invalid
    31                                          
    32 00000030 3C01                            cmp al, 1
    33 00000032 7503                            jnz .zero
    34 00000034 6601D7                          add edi, edx
    35                                          
    36                                          .zero:
    37                                          
    38 00000037 66D1E2                          shl edx, 1
    39                                          
    40 0000003A E2E9                        loop .iterate
    41                                      
    42 0000003C EB06                        jmp .valid
    43                                      
    44                                      .invalid:
    45 0000003E 66BF00000000                    mov edi, 0
    46                                      
    47                                      .valid:
    48                                      
    49 00000044 6689F8                      mov eax, edi
    50                                      
    51 00000047 665F                        pop edi
    52 00000049 665E                        pop esi
    53 0000004B 665D                        pop ebp
    54 0000004D 6659                        pop ecx
    55                                      
    56 0000004F C3                          ret
    57                                  
    58                                  %endif
