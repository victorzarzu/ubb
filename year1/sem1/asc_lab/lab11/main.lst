     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, scanf, printf
     6                                  
     7                                  import exit msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  extern base2_to_integer
    12                                  
    13                                  segment data use32 class = data public
    14 00000000 <res 00000004>              number resd 1
    15 00000004 256400                      format_integer db "%d", 0
    16 00000007 <res 00000021>              base2_number resb 33
    17 00000028 257300                      read_format_base2 db "%s", 0
    18 0000002B 61616100                    text db "aaa", 0
    19                                  
    20                                  segment code use32 class = code public
    21                                      start:
    22 00000000 68[00000000]                    push number
    23 00000005 68[04000000]                    push format_integer
    24 0000000A FF15[00000000]                  call [scanf]
    25 00000010 83C408                          add esp, 8
    26                                          
    27 00000013 833D[00000000]00                cmp dword [number], 0
    28 0000001A 7E62                            jle invalid_number
    29                                          
    30 0000001C 8B0D[00000000]                  mov ecx, dword [number]
    31                                          
    32                                          iterate:
    33 00000022 51                                  push ecx
    34                                              
    35 00000023 68[07000000]                        push base2_number
    36 00000028 68[28000000]                        push read_format_base2
    37 0000002D FF15[00000000]                      call [scanf]
    38 00000033 83C408                              add esp, 8
    39                                              
    40 00000036 BA00000000                          mov edx, 0
    41 0000003B BE[07000000]                        mov esi, base2_number
    42 00000040 FC                                  cld
    43                                              
    44                                              number_label:
    45 00000041 AC                                      lodsb
    46 00000042 3C00                                    cmp al, 0
    47 00000044 7403                                    jz end_number
    48 00000046 42                                      inc edx
    49 00000047 EBF8                                    jmp number_label
    50                                                  
    51                                              end_number:
    52 00000049 89D0                                mov eax, edx
    53                                              
    54 0000004B 83F800                              cmp eax, 0
    55 0000004E 742E                                jz invalid_number
    56                                              
    57 00000050 68[07000000]                        push base2_number
    58 00000055 50                                  push eax
    59 00000056 E8(00000000)                        call base2_to_integer
    60 0000005B 83C408                              add esp, 8
    61                                              
    62 0000005E 50                                  push eax
    63 0000005F 68[04000000]                        push format_integer
    64 00000064 FF15[00000000]                      call [printf]
    65 0000006A 83C408                              add esp, 8
    66                                              
    67 0000006D 59                                  pop ecx
    68                                              
    69 0000006E E2B2                            loop iterate
    70                                          
    71 00000070 68[2B000000]                    push text
    72 00000075 FF15[00000000]                  call [printf]
    73 0000007B 83C404                          add esp, 4
    74                                          
    75                                          invalid_number:
    76                                      
    77 0000007E 6A00                            push 0
    78 00000080 FF15[00000000]                  call [exit]
    79                                  
